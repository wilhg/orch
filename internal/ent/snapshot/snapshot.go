// Code generated by ent, DO NOT EDIT.

package snapshot

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the snapshot type in the database.
	Label = "snapshot"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSnapshotID holds the string denoting the snapshot_id field in the database.
	FieldSnapshotID = "snapshot_id"
	// FieldRunID holds the string denoting the run_id field in the database.
	FieldRunID = "run_id"
	// FieldUptoSeq holds the string denoting the upto_seq field in the database.
	FieldUptoSeq = "upto_seq"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the snapshot in the database.
	Table = "snapshots"
)

// Columns holds all SQL columns for snapshot fields.
var Columns = []string{
	FieldID,
	FieldSnapshotID,
	FieldRunID,
	FieldUptoSeq,
	FieldState,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// SnapshotIDValidator is a validator for the "snapshot_id" field. It is called by the builders before save.
	SnapshotIDValidator func(string) error
	// RunIDValidator is a validator for the "run_id" field. It is called by the builders before save.
	RunIDValidator func(string) error
	// UptoSeqValidator is a validator for the "upto_seq" field. It is called by the builders before save.
	UptoSeqValidator func(int64) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)

// OrderOption defines the ordering options for the Snapshot queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// BySnapshotID orders the results by the snapshot_id field.
func BySnapshotID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSnapshotID, opts...).ToFunc()
}

// ByRunID orders the results by the run_id field.
func ByRunID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRunID, opts...).ToFunc()
}

// ByUptoSeq orders the results by the upto_seq field.
func ByUptoSeq(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUptoSeq, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
