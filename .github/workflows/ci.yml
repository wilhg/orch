name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      GOEXPERIMENT: jsonv2,greenteagc
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'
          check-latest: true

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Go fmt check
        if: ${{ hashFiles('**/*.go') != '' }}
        run: |
          fmt_out=$(gofmt -s -l . || true)
          if [ -n "$fmt_out" ]; then
            echo "Files not gofmt-ed:"
            echo "$fmt_out"
            exit 1
          fi

      - name: Download modules
        if: ${{ hashFiles('**/go.mod') != '' }}
        run: go mod download

      - name: Go vet
        if: ${{ hashFiles('**/*.go') != '' }}
        run: go vet ./...

      - name: Install golangci-lint
        if: ${{ hashFiles('**/*.go') != '' }}
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.64.8

      - name: Run golangci-lint
        if: ${{ hashFiles('**/*.go') != '' }}
        run: |
          $(go env GOPATH)/bin/golangci-lint run --timeout=5m

      - name: Run tests (race)
        if: ${{ hashFiles('**/*.go') != '' }}
        run: |
          go test ./... -race -covermode=atomic

  integration:
    runs-on: ubuntu-latest
    needs: build-test
    if: ${{ secrets.OPENAI_API_KEY != '' }}
    env:
      GOEXPERIMENT: jsonv2,greenteagc
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          check-latest: true

      - name: Download modules
        run: go mod download

      - name: Run integration tests
        run: |
          go test -tags=integration ./... -v


